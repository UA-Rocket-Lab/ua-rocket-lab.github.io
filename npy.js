!function(r,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("cross-fetch")):"function"==typeof define&&define.amd?define(["cross-fetch"],t):(r="undefined"!=typeof globalThis?globalThis:r||self).npyjs=t(r.fetch)}(this,(function(r){"use strict";function t(r){return r&&"object"==typeof r&&"default"in r?r:{default:r}}var e=t(r);class a{constructor(r){r&&!("convertFloat16"in r)&&console.warn(["npyjs constructor now accepts {convertFloat16?: boolean}.","For usage, go to https://github.com/jhuapl-boss/npyjs."].join(" ")),this.convertFloat16=r?.convertFloat16??!0,this.dtypes={"<u1":{name:"uint8",size:8,arrayConstructor:Uint8Array},"|u1":{name:"uint8",size:8,arrayConstructor:Uint8Array},"<u2":{name:"uint16",size:16,arrayConstructor:Uint16Array},"|i1":{name:"int8",size:8,arrayConstructor:Int8Array},"<i2":{name:"int16",size:16,arrayConstructor:Int16Array},"<u4":{name:"uint32",size:32,arrayConstructor:Uint32Array},"<i4":{name:"int32",size:32,arrayConstructor:Int32Array},"<u8":{name:"uint64",size:64,arrayConstructor:BigUint64Array},"<i8":{name:"int64",size:64,arrayConstructor:BigInt64Array},"<f4":{name:"float32",size:32,arrayConstructor:Float32Array},"<f8":{name:"float64",size:64,arrayConstructor:Float64Array},"<f2":{name:"float16",size:16,arrayConstructor:Uint16Array,converter:this.convertFloat16?this.float16ToFloat32Array:void 0}}}float16ToFloat32Array(r){const t=r.length,e=new Float32Array(t);for(let o=0;o<t;o++)e[o]=a.float16ToFloat32(r[o]);return e}static float16ToFloat32(r){const t=r>>15&1,e=r>>10&31,a=1023&r;return 0===e?0===a?t?-0:0:(t?-1:1)*Math.pow(2,-14)*(a/1024):31===e?0===a?t?-1/0:1/0:NaN:(t?-1:1)*Math.pow(2,e-15)*(1+a/1024)}parse(r){const t=new DataView(r.slice(8,10)).getUint8(0),e=10+t,a=new TextDecoder("utf-8").decode(new Uint8Array(r.slice(10,10+t))),o=JSON.parse(a.toLowerCase().replace(/'/g,'"').replace("(","[").replace(/,*\),*/g,"]")),n=o.shape,s=this.dtypes[o.descr];if(!s)return console.error(`Unsupported dtype: ${o.descr}`),null;const i=new s.arrayConstructor(r,e),c=s.converter?s.converter.call(this,i):i;return{dtype:s.name,data:c,shape:n,fortranOrder:o.fortran_order}}async load(r,t,a){let o;if(a=a||{},r instanceof ArrayBuffer)o=r;else{const t=await e.default(r,{...a});o=await t.arrayBuffer()}const n=this.parse(o);return t?t(n):n}}return a}));
